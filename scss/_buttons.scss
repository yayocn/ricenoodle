// This scss determine the style of buttons.
// Determine several types of buttons.
//
//


// The base button
//
.btn {
  display: inline-block;
  font-weight: $btn-font-weight;
  text-align: center;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  user-select: none;
  border: $border-width solid transparent;
  @include button-size($btn-padding-y, $btn-padding-x, $font-size-base, $line-height);
  @if $enable-transitions {
    @include transition(all .1s ease-in-out); // compass
  }

  @include button-variant($btn-default-color, $btn-default-bg, $btn-default-border);
  @include hover-focus {
    text-decoration: none;
  }

  &.disabled,
  &:disabled {
    opacity: $btn-disabled-opacity;
    cursor: auto;
    @include box-shadow(none);
  }

  &:not(:disabled):not(.disabled) {
    cursor: pointer;
  }
}

// Brand buttons
//
//
@each $name, $color, $bg, $border in $btn-theme {
  .btn-#{$name} {
    @include button-variant($color, $bg, $border);
  }
}

// Outline buttons
// Invert brand buttons, remove all backgrounds.
//
.btn-outline {
  @include button-outline-variant($btn-default-color, $btn-default-border);
}
@each $name, $color, $bg, $border in $btn-theme {
  .btn-#{$name}-outline {
    @include button-outline-variant($color, $bg);
  }
}

// Link button
// Make a button look and behave like a link
//
.btn-link {
  font-weight: normal;
  color: $link-color;
  border-radius: 0;
  &:active,
  &.active {
    background-image: none;
    outline: 0;
    @include box-shadow(inset 0 3px 5px rgba(0,0,0,.125)); //compass
  }
  &,
  &:active,
  &.active,
  &:disabled,
  fieldset[disabled] & {
    background-color: transparent;
    @include box-shadow(none);
  }
  &,
  &:focus,
  &:active {
    border-color: transparent;
  }
  @include hover {
    border-color: transparent;
  }
  @include hover-focus {
    color: $link-hover-color;
    text-decoration: $link-hover-decoration;
    background-color: transparent;
  }
  &:disabled,
  &.disabled,
  fieldset[disabled] & {
    @include hover-focus {
      color: $btn-link-disabled-color;
      text-decoration: none;
    }
  }
}

// Button round and radius
//
//
.btn-circle {
  @include border-radius($border-radius-hg); //compass
}
.btn-round {
   @include border-radius($border-radius); //compass
   &.btn-lg {
     @include border-radius($border-radius-lg);
   }
   &.btn-sm {
     @include border-radius($border-radius-sm);
   }
 }

// Button size
//
//
.btn-hg {
  @include button-size($btn-padding-y-hg, $btn-padding-x-hg, $font-size-hg, $btn-hg-line-height);
}
.btn-lg {
  @include button-size($btn-padding-y-lg, $btn-padding-x-lg, $font-size-lg, $line-height-lg);
}
.btn-sm {
  @include button-size($btn-padding-y-sm, $btn-padding-x-sm, $font-size-xs, $line-height-sm);
}

// Block button
// The button width is same as his parent Element.
//
.btn-block {
  display: block;
  width: 100%;
}

// Vertically space out multiple block buttons
.btn-block + .btn-block {
  margin-top: 5px;
}

// Specificity overrides
input[type="submit"],
input[type="reset"],
input[type="button"] {
  &.btn-block {
    width: 100%;
  }
}

a.btn.disabled,
a.btn:disabled,
fieldset:disabled a.btn {
  pointer-events: none;
}