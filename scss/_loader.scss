// Loader
//
//

.loader {
  display: flex;

  span[class*="l-"] {
    display: inline-block;
    width: $loader-dot-width;
  }
}

// Loader-win-bar
//
@include keyframes(loader-win-bar) {
  0% { transform: translateX(-30px); opacity: 0; }
  10% { opacity: 1; }
  40% { opacity: 1; }
  60% { transform: translateX(30px); opacity: 0; }
  100% { opacity: 0; }
};

.loader-win-bar {
  justify-content: center;

  span[class*="l-"] {
    height: $loader-dot-height;
    background-color: $loader-dot-bg;
    margin: auto 2px;

    @include border-radius(100%);

    @include animation(loader-win-bar 4s infinite);
    @include animation-timing-function(cubic-bezier(0.030, 0.615, 0.995, 0.415));
    @include animation-fill-mode(both);
  }
}
$loader-win-bar-delay: (
  1: 1s,
  2: .75s,
  3: .5s,
  4: .25s,
  5: 0
);
@each $index, $value in $loader-win-bar-delay {
  .loader-win-bar {
    span.l-#{$index} {
      @include animation-delay($value);
    }
  }
}

//
// Loader-win-roll
//
@keyframes loader-win-roll {
  0% {
    transform: rotate(0deg);
    opacity: 1;
  }
  50% {
    transform: rotate(360deg);
    opacity: 1;
  }
  75% {
    transform: rotate(540deg);
    opacity: 0;
  }
  75% {
    transform: rotate(540deg);
    opacity: 0;
  }
  100% {
    transform: rotate(720deg);
    opacity: 1;
  }
}

.loader-win-roll {
  position: relative;
  margin: 0 auto;
  width: $loader-win-roll-width;
  height: $loader-win-roll-height;

  &::before {
    content: "";
    display: block;
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
  }

  span[class*="l-"] {
    position: absolute;
    height: 100%;
    top: 0;
    left: ($loader-win-roll-width - $loader-dot-width) / 2;

    &::after {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      width: $loader-dot-width;
      height: $loader-dot-height;
      background-color: $loader-dot-bg;
      opacity: 0;

      @include border-radius(100%);
    }
  }
}

$loader-win-roll-delay: (
        1: 0s,
        2: .15s,
        3: .3s,
        4: .45s,
        5: .6s
);
@each $index, $value in $loader-win-roll-delay {
  $deg: -90deg / (5 - 1) * ($index - 1) + 180deg;
  @keyframes loader-win-roll-#{$index} {
    0% {
      transform: rotate($deg+0deg);
    }

    100% {
      transform: rotate($deg+360deg);
    }
  };

  .loader-win-roll {
    span.l-#{$index} {
      transform: rotate($deg);
      @include animation(loader-win-roll-#{$index} 2s infinite cubic-bezier(.15,.8,.87,.21));
      @include animation-delay($value);
    }
  }
}

$loader-win-roll-delay-after: (
        1: 0s,
        2: .18s,
        3: .38s,
        4: .58s,
        5: .78s
);
@each $index, $value in $loader-win-roll-delay-after {
  $deg: -90deg / (5 - 1) * ($index - 1) + 180deg;
  @keyframes loader-win-roll-#{$index}-after {
    0% { opacity: 1; }
    33% { opacity: 1; }
    33.33% { opacity: 0; }
    66% { opacity: 0; }
    66.66% { opacity: 1; }
    100% { opacity: 1; }
  };

  .loader-win-roll {
    span.l-#{$index}::after {
      @include animation(loader-win-roll-#{$index}-after 6s infinite linear);
      @include animation-delay($value);
    }
  }
}

//
// Size
//
.loader-sm {
  &.loader-win-bar span[class*="l-"] {
    width: $loader-dot-sm;
    height: $loader-dot-sm;
  }

  &.loader-win-roll {
    width: $loader-win-roll-width-sm;
    height: $loader-win-roll-height-sm;

    span[class*="l-"] {
      left: ($loader-win-roll-width-sm - $loader-dot-sm) / 2;

      &::after {
        width: $loader-dot-sm;
        height: $loader-dot-sm;
      }
    }
  }
}

.loader-lg {
  &.loader-win-bar span[class*="l-"] {
    width: $loader-dot-lg;
    height: $loader-dot-lg;
  }

  &.loader-win-roll {
    width: $loader-win-roll-width-lg;
    height: $loader-win-roll-height-lg;

    span[class*="l-"] {
      left: ($loader-win-roll-width-lg - $loader-dot-lg) / 2;

      &::after {
        width: $loader-dot-lg;
        height: $loader-dot-lg;
      }
    }
  }
}

//
// State
//
@each $name, $value in $loader-colors {
  .loader-#{$name} {
    &.loader-win-bar span[class*="l-"],
    &.loader-win-roll span[class*="l-"]::after {
      background: $value;
    }
  }
}
